openapi: "3.0.3"
info:
  title: "News API"
  description: "A REST API for managing news articles"
  version: "1.0.0"
servers:
  - url: http://localhost:8080

security:
  - bearerAuth: [ ]

components:
  schemas:
    Article:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        author:
          type: string
        publishedDate:
          type: string
        likes:
          type: integer
      required:
        - id
        - title
        - content
        - author
        - publishedDate
    ArticleRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
      required:
        - title
        - content
        - author
        - publishedDate
    Comment:
      type: object
      properties:
        id:
          type: string
        articleId:
          type: string
        author:
          type: string
        content:
          type: string
        timestamp:
          type: string
      required:
        - id
        - articleId
        - content
        - author
        - timestamp
    CommentRequest:
      type: object
      properties:
        content:
          type: string
      required:
        - content
    LoginCredentials:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    UserRegistrationRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /articles:
    get:
      summary: Get all articles
      description: Retrieves a list of all news articles
      responses:
        '200':
          description: List of articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
    post:
      summary: Create a new article
      description: Creates a new news article
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
      responses:
        '201':
          description: Article created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
  /articles/{id}:
    get:
      summary: Get article by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Article found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '404':
          description: Article not found
    put:
      summary: Update an article
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
      responses:
        '200':
          description: Article updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '404':
          description: Article not found
    delete:
      summary: Delete an article
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Article deleted successfully
        '404':
          description: Article not found
  /articles/{id}/comments:
    post:
      summary: Add a comment to an article
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
      responses:
        '201':
          description: Comment added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Invalid input or missing article ID
  /articles/{id}/like:
    post:
      summary: Like an article
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Article liked successfully
        '404':
          description: Article not found
  /login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
      responses:
        '201':
          description: User created successfully
        '400':
          description: Bad Request
        '409':
          description: Email already exists
        '500':
          description: Internal Server Error
    /protected:
      get:
        summary: Protected Route
        security:
          - bearerAuth: [ ]
        responses:
          '200':
            description: Access granted
            content:
              text/plain:
                schema:
                  type: string